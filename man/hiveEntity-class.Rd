% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classes.R
\docType{class}
\name{hiveEntity-class}
\alias{hiveEntity-class}
\alias{hiveEntity}
\title{Class to contain Entity records}
\description{
This class is the S4 representation of the Entity record type.
It is a container for structured metadata and references to other GeneHive
records.
}
\section{Slots}{

\describe{
\item{\code{.class}}{A character string specifying the Entity class of the record.}

\item{\code{.class_name}}{A character string specifying the Entity class of the record; appears to be a
duplicate field that should be deprecated soon. Not currently used.}

\item{\code{.entity_id}}{A \code{\linkS4class{UUID}} specifying the unique identifier of the record.
See Details.}

\item{\code{.creator}}{A character string specifying the \code{username} of the User that
created the record. Defaults to \code{""}.}

\item{\code{.owner}}{A character string specifying the \code{username} of the User that
owns the record. Defaults to \code{""}.}

\item{\code{.group}}{A character string specifying the \code{name} of the Group associated
with the record. Defaults to \code{""}.}

\item{\code{.creation_date}}{A character string specifying the time and date at which the record was
created. Defaults to \code{""}.}

\item{\code{.updated}}{A character string specifying the time and date at which the record was last
updated. Defaults to \code{""}.}

\item{\code{.permissions}}{A \code{\linkS4class{hivePermissions}} object specifying the permissions
associated with the record. Defaults to read-only.}

\item{\code{.workfiles}}{An integer vector containing the IDs of any WorkFiles associated with the
record; used internally by the server-side app.
Defaults to an empty integer vector.}
}}

\section{Details}{

\code{hiveEntity} slots whose names begin with \code{.} are treated
specially.  (The corresponding Entity fields are denoted with a
leading \code{_} character.)

The \code{.entity_id} slot is computed in one of two ways:
\enumerate{
  \item{
    If 'key' fields have been defined for the Entity class, the hash of the
    Entity class name (e.g., \code{"FeatureSet"}) is combined with a hash
    computed from the contents of the key fields (e.g., \code{features}).
  }
  \item{
    If no 'key' fields have been defined for the Entity class, a random
    (version 4) UUID is assigned.
  }
}
This process ensures that Entity record identifiers are unique, both within
and across Entity classes.
}

\author{
Adam C. Gower \email{agower@bu.edu}
}
